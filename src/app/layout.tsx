"use client";
import GoogleAnalytics from "@/components/ga4/GoogleAnalytics";
import "./globals.css";
import type {Metadata} from "next";
import {Inter} from "next/font/google";
import {SocketProvider} from "@/components/context/socket";
import styles from "./layout.module.css";
import {useRouter} from "next/navigation";
import {useEffect} from "react";
import {AnimatePresence} from "framer-motion";
import {motion} from "framer-motion";
import PageAnimatePresence from "@/components/HOC/PageAnimations/PageAnimatePresence";


const GA_MEASUREMENT_ID = process.env.NEXT_PUBLIC_GA4_MEASUREMENT_ID;

const inter = Inter({subsets: ["latin"]});

// export const metadata: Metadata = {
//     title: "Mingle",
//     description: "Generated by mingle",
// };

export default function RootLayout({
                                       children,
                                   }: {
    children: React.ReactNode;
}) {

    const router = useRouter()
    const shouldAnimate = (route) => {
        return route === '/' || route === '/login';
    };

    return (
        <html lang="en">
        <link rel="icon" href="/white_logo.svg" sizes="any"/>
        <SocketProvider>
            <GoogleAnalytics GA_MEASUREMENT_ID={GA_MEASUREMENT_ID}/>
            <body className={inter.className}>
            <PageAnimatePresence>
                <div
                    id={styles.container}>
                    {shouldAnimate(router.route) ? (
                        <motion.div
                            key={router.route}
                            initial={{translateY: -1000, opacity: 0}}
                            animate={{translateY: 0, opacity: 1}}
                            exit={{translateY: -1000, opacity: 0}}
                            transition={{duration: 0.5}}
                        >
                            {children}
                        </motion.div>
                    ) : (
                        children
                    )}
                </div>
            </PageAnimatePresence>
            </body>
        </SocketProvider>
        </html>
    );
}
